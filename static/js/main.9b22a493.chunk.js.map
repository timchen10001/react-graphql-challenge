{"version":3,"sources":["generated/graphql.tsx","providers/StateProvider.tsx","components/Header.tsx","utils/getArticleNameFromLink.ts","utils/getYTIdFromLink.ts","components/YTEmbed.tsx","components/Launch/LaunchEmbedFrame.tsx","components/Launch/LaunchLink.tsx","components/Launch/LaunchSpan.tsx","components/Launch/LaunchMission.tsx","utils/difference.ts","utils/sleep.ts","hooks/useRWD.ts","reducers/reducer.ts","hooks/useLaunchQuery.ts","constants.ts","pages/Home.tsx","hooks/usePagination.ts","hooks/useTarget.ts","App.tsx","reportWebVitals.js","providers/apolloClient.ts","index.js"],"names":["Conflict_Action","Order_By","Users_Constraint","Users_Select_Column","Users_Update_Column","StateContext","createContext","StatePorvider","initialState","reducer","children","Provider","value","useReducer","useStateValue","useContext","Header","dispatch","useEffect","setTimeout","headerClassSet","document","querySelector","classList","add","type","selected","className","getArticleNameFromLink","articleLink","includes","splitedLink","split","Name","i","length","replaceAll","getYTIdFromLink","link","YTEmbed","videoId","props","src","frameBorder","allow","allowFullScreen","LaunchEmbedFrame","title","name","nameBreak","LaunchLink","href","description","LaunchSpan","beforeBreak","content","style","fontSize","LaunchMission","target","variant","isMobile","mission_name","padding","rocket","rocket_name","id","rocket_type","launch_success","launch_date_local","launch_site","site_name_long","links","article_link","details","video_link","width","minHeight","borderRadius","difference","a","b","Math","abs","sleep","ms","Promise","res","useRWD","useState","device","setDevice","handleRWD","window","innerWidth","addEventListener","removeEventListener","defaultOptions","RegularLaunchSiteFragmentDoc","gql","RegularLinksFragmentDoc","RegularRocketFragmentDoc","RegularLaunchFragmentDoc","LaunchNextDocument","LaunchesPastDocument","actionType","useLaunchQuery","baseOptions","options","Apollo","useLaunchNextQuery","nextQuery","data","nextError","error","useLaunchesPastQuery","variables","limit","pastQuery","pastError","launchesPast","Array","isArray","forEach","l","push","reverse","launchNext","Home","dispatching","isOnBottom","wrapper","wrapperViewHeight","body","clientHeight","clientWidth","scrollTop","scrollHeight","isOnTop","setState","newSelected","handleOnWheel","e","deltaY","isScrollDown","handleTouchMove","isScollDownByTouchMove","undefined","usePagination","renderConunter","useRef","setTarget","launchQuery","current","console","log","useTarget","lastClientY","onWheel","onTouchStart","changedTouches","clientY","onTouchMove","diff","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apolloClient","ApolloClient","uri","cache","InMemoryCache","__launches_past_limit__","state","action","SET_DISPATCHING","SET_SELECTED","SET_LIMIT","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.9b22a493.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions =  {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Date: any;\n  ObjectID: any;\n  timestamptz: any;\n  uuid: any;\n};\n\nexport type Address = {\n  __typename?: 'Address';\n  address?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n};\n\nexport type Capsule = {\n  __typename?: 'Capsule';\n  id?: Maybe<Scalars['ID']>;\n  landings?: Maybe<Scalars['Int']>;\n  missions?: Maybe<Array<Maybe<CapsuleMission>>>;\n  original_launch?: Maybe<Scalars['Date']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  dragon?: Maybe<Dragon>;\n};\n\nexport type CapsuleMission = {\n  __typename?: 'CapsuleMission';\n  flight?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type CapsulesFind = {\n  id?: Maybe<Scalars['ID']>;\n  landings?: Maybe<Scalars['Int']>;\n  mission?: Maybe<Scalars['String']>;\n  original_launch?: Maybe<Scalars['Date']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type Core = {\n  __typename?: 'Core';\n  asds_attempts?: Maybe<Scalars['Int']>;\n  asds_landings?: Maybe<Scalars['Int']>;\n  block?: Maybe<Scalars['Int']>;\n  id?: Maybe<Scalars['ID']>;\n  missions?: Maybe<Array<Maybe<CapsuleMission>>>;\n  original_launch?: Maybe<Scalars['Date']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  rtls_attempts?: Maybe<Scalars['Int']>;\n  rtls_landings?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  water_landing?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CoreMission = {\n  __typename?: 'CoreMission';\n  name?: Maybe<Scalars['String']>;\n  flight?: Maybe<Scalars['Int']>;\n};\n\nexport type CoresFind = {\n  asds_attempts?: Maybe<Scalars['Int']>;\n  asds_landings?: Maybe<Scalars['Int']>;\n  block?: Maybe<Scalars['Int']>;\n  id?: Maybe<Scalars['String']>;\n  missions?: Maybe<Scalars['String']>;\n  original_launch?: Maybe<Scalars['Date']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  rtls_attempts?: Maybe<Scalars['Int']>;\n  rtls_landings?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  water_landing?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type Distance = {\n  __typename?: 'Distance';\n  feet?: Maybe<Scalars['Float']>;\n  meters?: Maybe<Scalars['Float']>;\n};\n\nexport type Dragon = {\n  __typename?: 'Dragon';\n  active?: Maybe<Scalars['Boolean']>;\n  crew_capacity?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  diameter?: Maybe<Distance>;\n  dry_mass_kg?: Maybe<Scalars['Int']>;\n  dry_mass_lb?: Maybe<Scalars['Int']>;\n  first_flight?: Maybe<Scalars['String']>;\n  heat_shield?: Maybe<DragonHeatShield>;\n  height_w_trunk?: Maybe<Distance>;\n  id?: Maybe<Scalars['ID']>;\n  launch_payload_mass?: Maybe<Mass>;\n  launch_payload_vol?: Maybe<Volume>;\n  name?: Maybe<Scalars['String']>;\n  orbit_duration_yr?: Maybe<Scalars['Int']>;\n  pressurized_capsule?: Maybe<DragonPressurizedCapsule>;\n  return_payload_mass?: Maybe<Mass>;\n  return_payload_vol?: Maybe<Volume>;\n  sidewall_angle_deg?: Maybe<Scalars['Float']>;\n  thrusters?: Maybe<Array<Maybe<DragonThrust>>>;\n  trunk?: Maybe<DragonTrunk>;\n  type?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type DragonHeatShield = {\n  __typename?: 'DragonHeatShield';\n  dev_partner?: Maybe<Scalars['String']>;\n  material?: Maybe<Scalars['String']>;\n  size_meters?: Maybe<Scalars['Float']>;\n  temp_degrees?: Maybe<Scalars['Int']>;\n};\n\nexport type DragonPressurizedCapsule = {\n  __typename?: 'DragonPressurizedCapsule';\n  payload_volume?: Maybe<Volume>;\n};\n\nexport type DragonThrust = {\n  __typename?: 'DragonThrust';\n  amount?: Maybe<Scalars['Int']>;\n  fuel_1?: Maybe<Scalars['String']>;\n  fuel_2?: Maybe<Scalars['String']>;\n  pods?: Maybe<Scalars['Int']>;\n  thrust?: Maybe<Force>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type DragonTrunk = {\n  __typename?: 'DragonTrunk';\n  cargo?: Maybe<DragonTrunkCargo>;\n  trunk_volume?: Maybe<Volume>;\n};\n\nexport type DragonTrunkCargo = {\n  __typename?: 'DragonTrunkCargo';\n  solar_array?: Maybe<Scalars['Int']>;\n  unpressurized_cargo?: Maybe<Scalars['Boolean']>;\n};\n\nexport type Force = {\n  __typename?: 'Force';\n  kN?: Maybe<Scalars['Float']>;\n  lbf?: Maybe<Scalars['Float']>;\n};\n\nexport type HistoriesResult = {\n  __typename?: 'HistoriesResult';\n  result?: Maybe<Result>;\n  data?: Maybe<Array<Maybe<History>>>;\n};\n\nexport type History = {\n  __typename?: 'History';\n  details?: Maybe<Scalars['String']>;\n  event_date_unix?: Maybe<Scalars['Date']>;\n  event_date_utc?: Maybe<Scalars['Date']>;\n  id?: Maybe<Scalars['ID']>;\n  links?: Maybe<Link>;\n  title?: Maybe<Scalars['String']>;\n  flight?: Maybe<Launch>;\n};\n\nexport type HistoryFind = {\n  end?: Maybe<Scalars['Date']>;\n  flight_number?: Maybe<Scalars['Int']>;\n  id?: Maybe<Scalars['ID']>;\n  start?: Maybe<Scalars['Date']>;\n};\n\nexport type Info = {\n  __typename?: 'Info';\n  ceo?: Maybe<Scalars['String']>;\n  coo?: Maybe<Scalars['String']>;\n  cto_propulsion?: Maybe<Scalars['String']>;\n  cto?: Maybe<Scalars['String']>;\n  employees?: Maybe<Scalars['Int']>;\n  founded?: Maybe<Scalars['Int']>;\n  founder?: Maybe<Scalars['String']>;\n  headquarters?: Maybe<Address>;\n  launch_sites?: Maybe<Scalars['Int']>;\n  links?: Maybe<InfoLinks>;\n  name?: Maybe<Scalars['String']>;\n  summary?: Maybe<Scalars['String']>;\n  test_sites?: Maybe<Scalars['Int']>;\n  valuation?: Maybe<Scalars['Float']>;\n  vehicles?: Maybe<Scalars['Int']>;\n};\n\nexport type InfoLinks = {\n  __typename?: 'InfoLinks';\n  elon_twitter?: Maybe<Scalars['String']>;\n  flickr?: Maybe<Scalars['String']>;\n  twitter?: Maybe<Scalars['String']>;\n  website?: Maybe<Scalars['String']>;\n};\n\nexport type Landpad = {\n  __typename?: 'Landpad';\n  attempted_landings?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n  full_name?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  landing_type?: Maybe<Scalars['String']>;\n  location?: Maybe<Location>;\n  status?: Maybe<Scalars['String']>;\n  successful_landings?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Launch = {\n  __typename?: 'Launch';\n  details?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  is_tentative?: Maybe<Scalars['Boolean']>;\n  launch_date_local?: Maybe<Scalars['Date']>;\n  launch_date_unix?: Maybe<Scalars['Date']>;\n  launch_date_utc?: Maybe<Scalars['Date']>;\n  launch_site?: Maybe<LaunchSite>;\n  launch_success?: Maybe<Scalars['Boolean']>;\n  launch_year?: Maybe<Scalars['String']>;\n  links?: Maybe<LaunchLinks>;\n  mission_id?: Maybe<Array<Maybe<Scalars['String']>>>;\n  mission_name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<LaunchRocket>;\n  static_fire_date_unix?: Maybe<Scalars['Date']>;\n  static_fire_date_utc?: Maybe<Scalars['Date']>;\n  telemetry?: Maybe<LaunchTelemetry>;\n  tentative_max_precision?: Maybe<Scalars['String']>;\n  upcoming?: Maybe<Scalars['Boolean']>;\n  ships?: Maybe<Array<Maybe<Ship>>>;\n};\n\nexport type LaunchFind = {\n  apoapsis_km?: Maybe<Scalars['Float']>;\n  block?: Maybe<Scalars['Int']>;\n  cap_serial?: Maybe<Scalars['String']>;\n  capsule_reuse?: Maybe<Scalars['String']>;\n  core_flight?: Maybe<Scalars['Int']>;\n  core_reuse?: Maybe<Scalars['String']>;\n  core_serial?: Maybe<Scalars['String']>;\n  customer?: Maybe<Scalars['String']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  end?: Maybe<Scalars['Date']>;\n  epoch?: Maybe<Scalars['Date']>;\n  fairings_recovered?: Maybe<Scalars['String']>;\n  fairings_recovery_attempt?: Maybe<Scalars['String']>;\n  fairings_reuse?: Maybe<Scalars['String']>;\n  fairings_reused?: Maybe<Scalars['String']>;\n  fairings_ship?: Maybe<Scalars['String']>;\n  gridfins?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  inclination_deg?: Maybe<Scalars['Float']>;\n  land_success?: Maybe<Scalars['String']>;\n  landing_intent?: Maybe<Scalars['String']>;\n  landing_type?: Maybe<Scalars['String']>;\n  landing_vehicle?: Maybe<Scalars['String']>;\n  launch_date_local?: Maybe<Scalars['Date']>;\n  launch_date_utc?: Maybe<Scalars['Date']>;\n  launch_success?: Maybe<Scalars['String']>;\n  launch_year?: Maybe<Scalars['String']>;\n  legs?: Maybe<Scalars['String']>;\n  lifespan_years?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  manufacturer?: Maybe<Scalars['String']>;\n  mean_motion?: Maybe<Scalars['Float']>;\n  mission_id?: Maybe<Scalars['String']>;\n  mission_name?: Maybe<Scalars['String']>;\n  nationality?: Maybe<Scalars['String']>;\n  norad_id?: Maybe<Scalars['Int']>;\n  orbit?: Maybe<Scalars['String']>;\n  payload_id?: Maybe<Scalars['String']>;\n  payload_type?: Maybe<Scalars['String']>;\n  periapsis_km?: Maybe<Scalars['Float']>;\n  period_min?: Maybe<Scalars['Float']>;\n  raan?: Maybe<Scalars['Float']>;\n  reference_system?: Maybe<Scalars['String']>;\n  regime?: Maybe<Scalars['String']>;\n  reused?: Maybe<Scalars['String']>;\n  rocket_id?: Maybe<Scalars['String']>;\n  rocket_name?: Maybe<Scalars['String']>;\n  rocket_type?: Maybe<Scalars['String']>;\n  second_stage_block?: Maybe<Scalars['String']>;\n  semi_major_axis_km?: Maybe<Scalars['Float']>;\n  ship?: Maybe<Scalars['String']>;\n  side_core1_reuse?: Maybe<Scalars['String']>;\n  side_core2_reuse?: Maybe<Scalars['String']>;\n  site_id?: Maybe<Scalars['String']>;\n  site_name_long?: Maybe<Scalars['String']>;\n  site_name?: Maybe<Scalars['String']>;\n  start?: Maybe<Scalars['Date']>;\n  tbd?: Maybe<Scalars['String']>;\n  tentative_max_precision?: Maybe<Scalars['String']>;\n  tentative?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchLinks = {\n  __typename?: 'LaunchLinks';\n  article_link?: Maybe<Scalars['String']>;\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\n  mission_patch_small?: Maybe<Scalars['String']>;\n  mission_patch?: Maybe<Scalars['String']>;\n  presskit?: Maybe<Scalars['String']>;\n  reddit_campaign?: Maybe<Scalars['String']>;\n  reddit_launch?: Maybe<Scalars['String']>;\n  reddit_media?: Maybe<Scalars['String']>;\n  reddit_recovery?: Maybe<Scalars['String']>;\n  video_link?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchRocket = {\n  __typename?: 'LaunchRocket';\n  fairings?: Maybe<LaunchRocketFairings>;\n  first_stage?: Maybe<LaunchRocketFirstStage>;\n  rocket_name?: Maybe<Scalars['String']>;\n  rocket_type?: Maybe<Scalars['String']>;\n  rocket?: Maybe<Rocket>;\n  second_stage?: Maybe<LaunchRocketSecondStage>;\n};\n\nexport type LaunchRocketFairings = {\n  __typename?: 'LaunchRocketFairings';\n  recovered?: Maybe<Scalars['Boolean']>;\n  recovery_attempt?: Maybe<Scalars['Boolean']>;\n  reused?: Maybe<Scalars['Boolean']>;\n  ship?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchRocketFirstStage = {\n  __typename?: 'LaunchRocketFirstStage';\n  cores?: Maybe<Array<Maybe<LaunchRocketFirstStageCore>>>;\n};\n\nexport type LaunchRocketFirstStageCore = {\n  __typename?: 'LaunchRocketFirstStageCore';\n  block?: Maybe<Scalars['Int']>;\n  core?: Maybe<Core>;\n  flight?: Maybe<Scalars['Int']>;\n  gridfins?: Maybe<Scalars['Boolean']>;\n  land_success?: Maybe<Scalars['Boolean']>;\n  landing_intent?: Maybe<Scalars['Boolean']>;\n  landing_type?: Maybe<Scalars['String']>;\n  landing_vehicle?: Maybe<Scalars['String']>;\n  legs?: Maybe<Scalars['Boolean']>;\n  reused?: Maybe<Scalars['Boolean']>;\n};\n\nexport type LaunchRocketSecondStage = {\n  __typename?: 'LaunchRocketSecondStage';\n  block?: Maybe<Scalars['Int']>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n};\n\nexport type LaunchSite = {\n  __typename?: 'LaunchSite';\n  site_id?: Maybe<Scalars['String']>;\n  site_name_long?: Maybe<Scalars['String']>;\n  site_name?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchTelemetry = {\n  __typename?: 'LaunchTelemetry';\n  flight_club?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchesPastResult = {\n  __typename?: 'LaunchesPastResult';\n  result?: Maybe<Result>;\n  data?: Maybe<Array<Maybe<Launch>>>;\n};\n\nexport type Launchpad = {\n  __typename?: 'Launchpad';\n  attempted_launches?: Maybe<Scalars['Int']>;\n  details?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  location?: Maybe<Location>;\n  name?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  successful_launches?: Maybe<Scalars['Int']>;\n  vehicles_launched?: Maybe<Array<Maybe<Rocket>>>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Link = {\n  __typename?: 'Link';\n  article?: Maybe<Scalars['String']>;\n  reddit?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  region?: Maybe<Scalars['String']>;\n};\n\nexport type Mass = {\n  __typename?: 'Mass';\n  kg?: Maybe<Scalars['Int']>;\n  lb?: Maybe<Scalars['Int']>;\n};\n\nexport type Mission = {\n  __typename?: 'Mission';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  manufacturers?: Maybe<Array<Maybe<Scalars['String']>>>;\n  name?: Maybe<Scalars['String']>;\n  twitter?: Maybe<Scalars['String']>;\n  website?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n};\n\nexport type MissionResult = {\n  __typename?: 'MissionResult';\n  result?: Maybe<Result>;\n  data?: Maybe<Array<Maybe<Mission>>>;\n};\n\nexport type MissionsFind = {\n  id?: Maybe<Scalars['ID']>;\n  manufacturer?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  payload_id?: Maybe<Scalars['String']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** delete data from the table: \"users\" */\n  delete_users?: Maybe<Users_Mutation_Response>;\n  /** insert data into the table: \"users\" */\n  insert_users?: Maybe<Users_Mutation_Response>;\n  /** update data of the table: \"users\" */\n  update_users?: Maybe<Users_Mutation_Response>;\n};\n\n\nexport type MutationDelete_UsersArgs = {\n  where: Users_Bool_Exp;\n};\n\n\nexport type MutationInsert_UsersArgs = {\n  objects: Array<Users_Insert_Input>;\n  on_conflict?: Maybe<Users_On_Conflict>;\n};\n\n\nexport type MutationUpdate_UsersArgs = {\n  _set?: Maybe<Users_Set_Input>;\n  where: Users_Bool_Exp;\n};\n\n\nexport type Payload = {\n  __typename?: 'Payload';\n  customers?: Maybe<Array<Maybe<Scalars['String']>>>;\n  id?: Maybe<Scalars['ID']>;\n  manufacturer?: Maybe<Scalars['String']>;\n  nationality?: Maybe<Scalars['String']>;\n  norad_id?: Maybe<Array<Maybe<Scalars['Int']>>>;\n  orbit_params?: Maybe<PayloadOrbitParams>;\n  orbit?: Maybe<Scalars['String']>;\n  payload_mass_kg?: Maybe<Scalars['Float']>;\n  payload_mass_lbs?: Maybe<Scalars['Float']>;\n  payload_type?: Maybe<Scalars['String']>;\n  reused?: Maybe<Scalars['Boolean']>;\n};\n\nexport type PayloadOrbitParams = {\n  __typename?: 'PayloadOrbitParams';\n  apoapsis_km?: Maybe<Scalars['Float']>;\n  arg_of_pericenter?: Maybe<Scalars['Float']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  epoch?: Maybe<Scalars['Date']>;\n  inclination_deg?: Maybe<Scalars['Float']>;\n  lifespan_years?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  mean_anomaly?: Maybe<Scalars['Float']>;\n  mean_motion?: Maybe<Scalars['Float']>;\n  periapsis_km?: Maybe<Scalars['Float']>;\n  period_min?: Maybe<Scalars['Float']>;\n  raan?: Maybe<Scalars['Float']>;\n  reference_system?: Maybe<Scalars['String']>;\n  regime?: Maybe<Scalars['String']>;\n  semi_major_axis_km?: Maybe<Scalars['Float']>;\n};\n\nexport type PayloadsFind = {\n  apoapsis_km?: Maybe<Scalars['Float']>;\n  customer?: Maybe<Scalars['String']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  epoch?: Maybe<Scalars['Date']>;\n  inclination_deg?: Maybe<Scalars['Float']>;\n  lifespan_years?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  manufacturer?: Maybe<Scalars['String']>;\n  mean_motion?: Maybe<Scalars['Float']>;\n  nationality?: Maybe<Scalars['String']>;\n  norad_id?: Maybe<Scalars['Int']>;\n  orbit?: Maybe<Scalars['String']>;\n  payload_id?: Maybe<Scalars['ID']>;\n  payload_type?: Maybe<Scalars['String']>;\n  periapsis_km?: Maybe<Scalars['Float']>;\n  period_min?: Maybe<Scalars['Float']>;\n  raan?: Maybe<Scalars['Float']>;\n  reference_system?: Maybe<Scalars['String']>;\n  regime?: Maybe<Scalars['String']>;\n  reused?: Maybe<Scalars['Boolean']>;\n  semi_major_axis_km?: Maybe<Scalars['Float']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** fetch data from the table: \"users\" */\n  users: Array<Users>;\n  /** fetch aggregated fields from the table: \"users\" */\n  users_aggregate: Users_Aggregate;\n  /** fetch data from the table: \"users\" using primary key columns */\n  users_by_pk?: Maybe<Users>;\n  capsules?: Maybe<Array<Maybe<Capsule>>>;\n  capsulesPast?: Maybe<Array<Maybe<Capsule>>>;\n  capsulesUpcoming?: Maybe<Array<Maybe<Capsule>>>;\n  capsule?: Maybe<Capsule>;\n  company?: Maybe<Info>;\n  cores?: Maybe<Array<Maybe<Core>>>;\n  coresPast?: Maybe<Array<Maybe<Core>>>;\n  coresUpcoming?: Maybe<Array<Maybe<Core>>>;\n  core?: Maybe<Core>;\n  dragons?: Maybe<Array<Maybe<Dragon>>>;\n  dragon?: Maybe<Dragon>;\n  histories?: Maybe<Array<Maybe<History>>>;\n  historiesResult?: Maybe<HistoriesResult>;\n  history?: Maybe<History>;\n  landpads?: Maybe<Array<Maybe<Landpad>>>;\n  landpad?: Maybe<Landpad>;\n  launches?: Maybe<Array<Maybe<Launch>>>;\n  launchesPast?: Maybe<Array<Maybe<Launch>>>;\n  launchesPastResult?: Maybe<LaunchesPastResult>;\n  launchesUpcoming?: Maybe<Array<Maybe<Launch>>>;\n  launch?: Maybe<Launch>;\n  launchLatest?: Maybe<Launch>;\n  launchNext?: Maybe<Launch>;\n  launchpads?: Maybe<Array<Maybe<Launchpad>>>;\n  launchpad?: Maybe<Launchpad>;\n  missions?: Maybe<Array<Maybe<Mission>>>;\n  missionsResult?: Maybe<MissionResult>;\n  mission?: Maybe<Mission>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n  payload?: Maybe<Payload>;\n  roadster?: Maybe<Roadster>;\n  rockets?: Maybe<Array<Maybe<Rocket>>>;\n  rocketsResult?: Maybe<RocketsResult>;\n  rocket?: Maybe<Rocket>;\n  ships?: Maybe<Array<Maybe<Ship>>>;\n  shipsResult?: Maybe<ShipsResult>;\n  ship?: Maybe<Ship>;\n};\n\n\nexport type QueryUsersArgs = {\n  distinct_on?: Maybe<Array<Users_Select_Column>>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order_by?: Maybe<Array<Users_Order_By>>;\n  where?: Maybe<Users_Bool_Exp>;\n};\n\n\nexport type QueryUsers_AggregateArgs = {\n  distinct_on?: Maybe<Array<Users_Select_Column>>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order_by?: Maybe<Array<Users_Order_By>>;\n  where?: Maybe<Users_Bool_Exp>;\n};\n\n\nexport type QueryUsers_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type QueryCapsulesArgs = {\n  find?: Maybe<CapsulesFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCapsulesPastArgs = {\n  find?: Maybe<CapsulesFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCapsulesUpcomingArgs = {\n  find?: Maybe<CapsulesFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCapsuleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCoresArgs = {\n  find?: Maybe<CoresFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCoresPastArgs = {\n  find?: Maybe<CoresFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCoresUpcomingArgs = {\n  find?: Maybe<CoresFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCoreArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDragonsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryDragonArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryHistoriesArgs = {\n  find?: Maybe<HistoryFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHistoriesResultArgs = {\n  find?: Maybe<HistoryFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHistoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLandpadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLandpadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLaunchesArgs = {\n  find?: Maybe<LaunchFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchesPastArgs = {\n  find?: Maybe<LaunchFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchesPastResultArgs = {\n  find?: Maybe<LaunchFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchesUpcomingArgs = {\n  find?: Maybe<LaunchFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLaunchLatestArgs = {\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLaunchNextArgs = {\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLaunchpadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLaunchpadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryMissionsArgs = {\n  find?: Maybe<MissionsFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryMissionsResultArgs = {\n  find?: Maybe<MissionsFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryMissionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPayloadsArgs = {\n  find?: Maybe<PayloadsFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPayloadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryRocketsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryRocketsResultArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryRocketArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryShipsArgs = {\n  find?: Maybe<ShipsFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryShipsResultArgs = {\n  find?: Maybe<ShipsFind>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Scalars['String']>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryShipArgs = {\n  id: Scalars['ID'];\n};\n\nexport type Result = {\n  __typename?: 'Result';\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type Roadster = {\n  __typename?: 'Roadster';\n  apoapsis_au?: Maybe<Scalars['Float']>;\n  details?: Maybe<Scalars['String']>;\n  earth_distance_km?: Maybe<Scalars['Float']>;\n  earth_distance_mi?: Maybe<Scalars['Float']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  epoch_jd?: Maybe<Scalars['Float']>;\n  inclination?: Maybe<Scalars['Float']>;\n  launch_date_unix?: Maybe<Scalars['Date']>;\n  launch_date_utc?: Maybe<Scalars['Date']>;\n  launch_mass_kg?: Maybe<Scalars['Int']>;\n  launch_mass_lbs?: Maybe<Scalars['Int']>;\n  longitude?: Maybe<Scalars['Float']>;\n  mars_distance_km?: Maybe<Scalars['Float']>;\n  mars_distance_mi?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  norad_id?: Maybe<Scalars['Int']>;\n  orbit_type?: Maybe<Scalars['Float']>;\n  periapsis_arg?: Maybe<Scalars['Float']>;\n  periapsis_au?: Maybe<Scalars['Float']>;\n  period_days?: Maybe<Scalars['Float']>;\n  semi_major_axis_au?: Maybe<Scalars['Float']>;\n  speed_kph?: Maybe<Scalars['Float']>;\n  speed_mph?: Maybe<Scalars['Float']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Rocket = {\n  __typename?: 'Rocket';\n  active?: Maybe<Scalars['Boolean']>;\n  boosters?: Maybe<Scalars['Int']>;\n  company?: Maybe<Scalars['String']>;\n  cost_per_launch?: Maybe<Scalars['Int']>;\n  country?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  diameter?: Maybe<Distance>;\n  engines?: Maybe<RocketEngines>;\n  first_flight?: Maybe<Scalars['Date']>;\n  first_stage?: Maybe<RocketFirstStage>;\n  height?: Maybe<Distance>;\n  id?: Maybe<Scalars['ID']>;\n  landing_legs?: Maybe<RocketLandingLegs>;\n  mass?: Maybe<Mass>;\n  name?: Maybe<Scalars['String']>;\n  payload_weights?: Maybe<Array<Maybe<RocketPayloadWeight>>>;\n  second_stage?: Maybe<RocketSecondStage>;\n  stages?: Maybe<Scalars['Int']>;\n  success_rate_pct?: Maybe<Scalars['Int']>;\n  type?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type RocketEngines = {\n  __typename?: 'RocketEngines';\n  number?: Maybe<Scalars['Int']>;\n  type?: Maybe<Scalars['String']>;\n  version?: Maybe<Scalars['String']>;\n  layout?: Maybe<Scalars['String']>;\n  engine_loss_max?: Maybe<Scalars['String']>;\n  propellant_1?: Maybe<Scalars['String']>;\n  propellant_2?: Maybe<Scalars['String']>;\n  thrust_sea_level?: Maybe<Force>;\n  thrust_vacuum?: Maybe<Force>;\n  thrust_to_weight?: Maybe<Scalars['Float']>;\n};\n\nexport type RocketFirstStage = {\n  __typename?: 'RocketFirstStage';\n  burn_time_sec?: Maybe<Scalars['Int']>;\n  engines?: Maybe<Scalars['Int']>;\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\n  reusable?: Maybe<Scalars['Boolean']>;\n  thrust_sea_level?: Maybe<Force>;\n  thrust_vacuum?: Maybe<Force>;\n};\n\nexport type RocketLandingLegs = {\n  __typename?: 'RocketLandingLegs';\n  number?: Maybe<Scalars['Int']>;\n  material?: Maybe<Scalars['String']>;\n};\n\nexport type RocketPayloadWeight = {\n  __typename?: 'RocketPayloadWeight';\n  id?: Maybe<Scalars['String']>;\n  kg?: Maybe<Scalars['Int']>;\n  lb?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type RocketSecondStage = {\n  __typename?: 'RocketSecondStage';\n  burn_time_sec?: Maybe<Scalars['Int']>;\n  engines?: Maybe<Scalars['Int']>;\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\n  payloads?: Maybe<RocketSecondStagePayloads>;\n  thrust?: Maybe<Force>;\n};\n\nexport type RocketSecondStagePayloadCompositeFairing = {\n  __typename?: 'RocketSecondStagePayloadCompositeFairing';\n  height?: Maybe<Distance>;\n  diameter?: Maybe<Distance>;\n};\n\nexport type RocketSecondStagePayloads = {\n  __typename?: 'RocketSecondStagePayloads';\n  option_1?: Maybe<Scalars['String']>;\n  composite_fairing?: Maybe<RocketSecondStagePayloadCompositeFairing>;\n};\n\nexport type RocketsResult = {\n  __typename?: 'RocketsResult';\n  result?: Maybe<Result>;\n  data?: Maybe<Array<Maybe<Rocket>>>;\n};\n\nexport type Ship = {\n  __typename?: 'Ship';\n  abs?: Maybe<Scalars['Int']>;\n  active?: Maybe<Scalars['Boolean']>;\n  attempted_landings?: Maybe<Scalars['Int']>;\n  class?: Maybe<Scalars['Int']>;\n  course_deg?: Maybe<Scalars['Int']>;\n  home_port?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  image?: Maybe<Scalars['String']>;\n  imo?: Maybe<Scalars['Int']>;\n  missions?: Maybe<Array<Maybe<ShipMission>>>;\n  mmsi?: Maybe<Scalars['Int']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  position?: Maybe<ShipLocation>;\n  roles?: Maybe<Array<Maybe<Scalars['String']>>>;\n  speed_kn?: Maybe<Scalars['Float']>;\n  status?: Maybe<Scalars['String']>;\n  successful_landings?: Maybe<Scalars['Int']>;\n  type?: Maybe<Scalars['String']>;\n  url?: Maybe<Scalars['String']>;\n  weight_kg?: Maybe<Scalars['Int']>;\n  weight_lbs?: Maybe<Scalars['Int']>;\n  year_built?: Maybe<Scalars['Int']>;\n};\n\nexport type ShipLocation = {\n  __typename?: 'ShipLocation';\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type ShipMission = {\n  __typename?: 'ShipMission';\n  flight?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type ShipsFind = {\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  role?: Maybe<Scalars['String']>;\n  active?: Maybe<Scalars['Boolean']>;\n  imo?: Maybe<Scalars['Int']>;\n  mmsi?: Maybe<Scalars['Int']>;\n  abs?: Maybe<Scalars['Int']>;\n  class?: Maybe<Scalars['Int']>;\n  weight_lbs?: Maybe<Scalars['Int']>;\n  weight_kg?: Maybe<Scalars['Int']>;\n  year_built?: Maybe<Scalars['Int']>;\n  home_port?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  speed_kn?: Maybe<Scalars['Int']>;\n  course_deg?: Maybe<Scalars['Int']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  successful_landings?: Maybe<Scalars['Int']>;\n  attempted_landings?: Maybe<Scalars['Int']>;\n  mission?: Maybe<Scalars['String']>;\n};\n\nexport type ShipsResult = {\n  __typename?: 'ShipsResult';\n  result?: Maybe<Result>;\n  data?: Maybe<Array<Maybe<Ship>>>;\n};\n\n/** expression to compare columns of type String. All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: Maybe<Scalars['String']>;\n  _gt?: Maybe<Scalars['String']>;\n  _gte?: Maybe<Scalars['String']>;\n  _ilike?: Maybe<Scalars['String']>;\n  _in?: Maybe<Array<Scalars['String']>>;\n  _is_null?: Maybe<Scalars['Boolean']>;\n  _like?: Maybe<Scalars['String']>;\n  _lt?: Maybe<Scalars['String']>;\n  _lte?: Maybe<Scalars['String']>;\n  _neq?: Maybe<Scalars['String']>;\n  _nilike?: Maybe<Scalars['String']>;\n  _nin?: Maybe<Array<Scalars['String']>>;\n  _nlike?: Maybe<Scalars['String']>;\n  _nsimilar?: Maybe<Scalars['String']>;\n  _similar?: Maybe<Scalars['String']>;\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  /** fetch data from the table: \"users\" */\n  users: Array<Users>;\n  /** fetch aggregated fields from the table: \"users\" */\n  users_aggregate: Users_Aggregate;\n  /** fetch data from the table: \"users\" using primary key columns */\n  users_by_pk?: Maybe<Users>;\n};\n\n\nexport type SubscriptionUsersArgs = {\n  distinct_on?: Maybe<Array<Users_Select_Column>>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order_by?: Maybe<Array<Users_Order_By>>;\n  where?: Maybe<Users_Bool_Exp>;\n};\n\n\nexport type SubscriptionUsers_AggregateArgs = {\n  distinct_on?: Maybe<Array<Users_Select_Column>>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order_by?: Maybe<Array<Users_Order_By>>;\n  where?: Maybe<Users_Bool_Exp>;\n};\n\n\nexport type SubscriptionUsers_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\nexport type Volume = {\n  __typename?: 'Volume';\n  cubic_feet?: Maybe<Scalars['Int']>;\n  cubic_meters?: Maybe<Scalars['Int']>;\n};\n\n/** conflict action */\nexport enum Conflict_Action {\n  /** ignore the insert on this row */\n  Ignore = 'ignore',\n  /** update the row with the given values */\n  Update = 'update'\n}\n\n/** column ordering options */\nexport enum Order_By {\n  /** in the ascending order, nulls last */\n  Asc = 'asc',\n  /** in the ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in the ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in the descending order, nulls first */\n  Desc = 'desc',\n  /** in the descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in the descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\n\n/** expression to compare columns of type timestamptz. All fields are combined with logical 'AND'. */\nexport type Timestamptz_Comparison_Exp = {\n  _eq?: Maybe<Scalars['timestamptz']>;\n  _gt?: Maybe<Scalars['timestamptz']>;\n  _gte?: Maybe<Scalars['timestamptz']>;\n  _in?: Maybe<Array<Scalars['timestamptz']>>;\n  _is_null?: Maybe<Scalars['Boolean']>;\n  _lt?: Maybe<Scalars['timestamptz']>;\n  _lte?: Maybe<Scalars['timestamptz']>;\n  _neq?: Maybe<Scalars['timestamptz']>;\n  _nin?: Maybe<Array<Scalars['timestamptz']>>;\n};\n\n/** columns and relationships of \"users\" */\nexport type Users = {\n  __typename?: 'users';\n  id: Scalars['uuid'];\n  name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<Scalars['String']>;\n  timestamp: Scalars['timestamptz'];\n  twitter?: Maybe<Scalars['String']>;\n};\n\n/** aggregated selection of \"users\" */\nexport type Users_Aggregate = {\n  __typename?: 'users_aggregate';\n  aggregate?: Maybe<Users_Aggregate_Fields>;\n  nodes: Array<Users>;\n};\n\n/** aggregate fields of \"users\" */\nexport type Users_Aggregate_Fields = {\n  __typename?: 'users_aggregate_fields';\n  count?: Maybe<Scalars['Int']>;\n  max?: Maybe<Users_Max_Fields>;\n  min?: Maybe<Users_Min_Fields>;\n};\n\n\n/** aggregate fields of \"users\" */\nexport type Users_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Users_Select_Column>>;\n  distinct?: Maybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"users\" */\nexport type Users_Aggregate_Order_By = {\n  count?: Maybe<Order_By>;\n  max?: Maybe<Users_Max_Order_By>;\n  min?: Maybe<Users_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"users\" */\nexport type Users_Arr_Rel_Insert_Input = {\n  data: Array<Users_Insert_Input>;\n  on_conflict?: Maybe<Users_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'. */\nexport type Users_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Users_Bool_Exp>>>;\n  _not?: Maybe<Users_Bool_Exp>;\n  _or?: Maybe<Array<Maybe<Users_Bool_Exp>>>;\n  id?: Maybe<Uuid_Comparison_Exp>;\n  name?: Maybe<String_Comparison_Exp>;\n  rocket?: Maybe<String_Comparison_Exp>;\n  timestamp?: Maybe<Timestamptz_Comparison_Exp>;\n  twitter?: Maybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"users\" */\nexport enum Users_Constraint {\n  /** unique or primary key constraint */\n  UsersPkey = 'users_pkey'\n}\n\n/** input type for inserting data into table \"users\" */\nexport type Users_Insert_Input = {\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['timestamptz']>;\n  twitter?: Maybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Users_Max_Fields = {\n  __typename?: 'users_max_fields';\n  name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['timestamptz']>;\n  twitter?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"users\" */\nexport type Users_Max_Order_By = {\n  name?: Maybe<Order_By>;\n  rocket?: Maybe<Order_By>;\n  timestamp?: Maybe<Order_By>;\n  twitter?: Maybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Users_Min_Fields = {\n  __typename?: 'users_min_fields';\n  name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['timestamptz']>;\n  twitter?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"users\" */\nexport type Users_Min_Order_By = {\n  name?: Maybe<Order_By>;\n  rocket?: Maybe<Order_By>;\n  timestamp?: Maybe<Order_By>;\n  twitter?: Maybe<Order_By>;\n};\n\n/** response of any mutation on the table \"users\" */\nexport type Users_Mutation_Response = {\n  __typename?: 'users_mutation_response';\n  /** number of affected rows by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data of the affected rows by the mutation */\n  returning: Array<Users>;\n};\n\n/** input type for inserting object relation for remote table \"users\" */\nexport type Users_Obj_Rel_Insert_Input = {\n  data: Users_Insert_Input;\n  on_conflict?: Maybe<Users_On_Conflict>;\n};\n\n/** on conflict condition type for table \"users\" */\nexport type Users_On_Conflict = {\n  constraint: Users_Constraint;\n  update_columns: Array<Users_Update_Column>;\n};\n\n/** ordering options when selecting data from \"users\" */\nexport type Users_Order_By = {\n  id?: Maybe<Order_By>;\n  name?: Maybe<Order_By>;\n  rocket?: Maybe<Order_By>;\n  timestamp?: Maybe<Order_By>;\n  twitter?: Maybe<Order_By>;\n};\n\n/** select columns of table \"users\" */\nexport enum Users_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  Rocket = 'rocket',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  Twitter = 'twitter'\n}\n\n/** input type for updating data in table \"users\" */\nexport type Users_Set_Input = {\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['timestamptz']>;\n  twitter?: Maybe<Scalars['String']>;\n};\n\n/** update columns of table \"users\" */\nexport enum Users_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  Rocket = 'rocket',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  Twitter = 'twitter'\n}\n\n\n/** expression to compare columns of type uuid. All fields are combined with logical 'AND'. */\nexport type Uuid_Comparison_Exp = {\n  _eq?: Maybe<Scalars['uuid']>;\n  _gt?: Maybe<Scalars['uuid']>;\n  _gte?: Maybe<Scalars['uuid']>;\n  _in?: Maybe<Array<Scalars['uuid']>>;\n  _is_null?: Maybe<Scalars['Boolean']>;\n  _lt?: Maybe<Scalars['uuid']>;\n  _lte?: Maybe<Scalars['uuid']>;\n  _neq?: Maybe<Scalars['uuid']>;\n  _nin?: Maybe<Array<Scalars['uuid']>>;\n};\n\nexport type RegularLaunchFragment = (\n  { __typename?: 'Launch' }\n  & Pick<Launch, 'id' | 'mission_name' | 'launch_date_local' | 'details' | 'launch_success'>\n  & { launch_site?: Maybe<(\n    { __typename?: 'LaunchSite' }\n    & RegularLaunchSiteFragment\n  )>, links?: Maybe<(\n    { __typename?: 'LaunchLinks' }\n    & RegularLinksFragment\n  )>, rocket?: Maybe<(\n    { __typename?: 'LaunchRocket' }\n    & RegularRocketFragment\n  )> }\n);\n\nexport type RegularLaunchSiteFragment = (\n  { __typename?: 'LaunchSite' }\n  & Pick<LaunchSite, 'site_name_long'>\n);\n\nexport type RegularLinksFragment = (\n  { __typename?: 'LaunchLinks' }\n  & Pick<LaunchLinks, 'article_link' | 'video_link'>\n);\n\nexport type RegularRocketFragment = (\n  { __typename?: 'LaunchRocket' }\n  & Pick<LaunchRocket, 'rocket_name' | 'rocket_type'>\n);\n\nexport type LaunchNextQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LaunchNextQuery = (\n  { __typename?: 'Query' }\n  & { launchNext?: Maybe<(\n    { __typename?: 'Launch' }\n    & RegularLaunchFragment\n  )> }\n);\n\nexport type LaunchesPastQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n}>;\n\n\nexport type LaunchesPastQuery = (\n  { __typename?: 'Query' }\n  & { launchesPast?: Maybe<Array<Maybe<(\n    { __typename?: 'Launch' }\n    & RegularLaunchFragment\n  )>>> }\n);\n\nexport const RegularLaunchSiteFragmentDoc = gql`\n    fragment RegularLaunchSite on LaunchSite {\n  site_name_long\n}\n    `;\nexport const RegularLinksFragmentDoc = gql`\n    fragment RegularLinks on LaunchLinks {\n  article_link\n  video_link\n}\n    `;\nexport const RegularRocketFragmentDoc = gql`\n    fragment RegularRocket on LaunchRocket {\n  rocket_name\n  rocket_type\n}\n    `;\nexport const RegularLaunchFragmentDoc = gql`\n    fragment RegularLaunch on Launch {\n  id\n  mission_name\n  launch_date_local\n  details\n  launch_success\n  launch_site {\n    ...RegularLaunchSite\n  }\n  links {\n    ...RegularLinks\n  }\n  rocket {\n    ...RegularRocket\n  }\n}\n    ${RegularLaunchSiteFragmentDoc}\n${RegularLinksFragmentDoc}\n${RegularRocketFragmentDoc}`;\nexport const LaunchNextDocument = gql`\n    query LaunchNext {\n  launchNext {\n    ...RegularLaunch\n  }\n}\n    ${RegularLaunchFragmentDoc}`;\n\n/**\n * __useLaunchNextQuery__\n *\n * To run a query within a React component, call `useLaunchNextQuery` and pass it any options that fit your needs.\n * When your component renders, `useLaunchNextQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLaunchNextQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLaunchNextQuery(baseOptions?: Apollo.QueryHookOptions<LaunchNextQuery, LaunchNextQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<LaunchNextQuery, LaunchNextQueryVariables>(LaunchNextDocument, options);\n      }\nexport function useLaunchNextLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<LaunchNextQuery, LaunchNextQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<LaunchNextQuery, LaunchNextQueryVariables>(LaunchNextDocument, options);\n        }\nexport type LaunchNextQueryHookResult = ReturnType<typeof useLaunchNextQuery>;\nexport type LaunchNextLazyQueryHookResult = ReturnType<typeof useLaunchNextLazyQuery>;\nexport type LaunchNextQueryResult = Apollo.QueryResult<LaunchNextQuery, LaunchNextQueryVariables>;\nexport const LaunchesPastDocument = gql`\n    query LaunchesPast($limit: Int) {\n  launchesPast(limit: $limit) {\n    ...RegularLaunch\n  }\n}\n    ${RegularLaunchFragmentDoc}`;\n\n/**\n * __useLaunchesPastQuery__\n *\n * To run a query within a React component, call `useLaunchesPastQuery` and pass it any options that fit your needs.\n * When your component renders, `useLaunchesPastQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLaunchesPastQuery({\n *   variables: {\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useLaunchesPastQuery(baseOptions?: Apollo.QueryHookOptions<LaunchesPastQuery, LaunchesPastQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<LaunchesPastQuery, LaunchesPastQueryVariables>(LaunchesPastDocument, options);\n      }\nexport function useLaunchesPastLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<LaunchesPastQuery, LaunchesPastQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<LaunchesPastQuery, LaunchesPastQueryVariables>(LaunchesPastDocument, options);\n        }\nexport type LaunchesPastQueryHookResult = ReturnType<typeof useLaunchesPastQuery>;\nexport type LaunchesPastLazyQueryHookResult = ReturnType<typeof useLaunchesPastLazyQuery>;\nexport type LaunchesPastQueryResult = Apollo.QueryResult<LaunchesPastQuery, LaunchesPastQueryVariables>;\n\n      export interface PossibleTypesResultData {\n        possibleTypes: {\n          [key: string]: string[]\n        }\n      }\n      const result: PossibleTypesResultData = {\n  \"possibleTypes\": {}\n};\n      export default result;\n    ","import { createContext, useContext, useReducer } from \"react\";\nimport { IStateValue } from \"../types\";\n\nconst StateContext = createContext({});\n\nexport const StatePorvider = ({ initialState, reducer, children }: any) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () =>\n  useContext(StateContext) as [IStateValue, any];\n","import React, { useEffect } from \"react\";\nimport { useStateValue } from \"../providers/StateProvider\";\nimport \"../styles/Header.scss\";\n\ninterface HeaderProps {}\n\nexport const Header: React.FC<HeaderProps> = () => {\n  const [, dispatch] = useStateValue();\n  useEffect(() => {\n    setTimeout(() => {\n      const headerClassSet = document.querySelector(\".header\")?.classList;\n      headerClassSet?.add(\"fadeout\");\n      setTimeout(() => {\n        headerClassSet?.add(\"hide\");\n        dispatch({ type: \"SET_SELECTED\", selected: 0 });\n      }, 1500);\n    }, 1500);\n  }, []);\n  return <div className=\"header\"></div>;\n};\n","export const getArticleNameFromLink = (articleLink: string | undefined | null) => {\n  if (!articleLink || !articleLink?.includes(\"/\")) {\n    return \"\";\n  }\n  const splitedLink = articleLink.split(\"/\");\n  let Name: string = \"\";\n  let i = splitedLink.length;\n  while (i > 0 && !(Name = splitedLink[i--]));\n  return Name.replaceAll(\"-\", \" \");\n};\n","import { Maybe } from \"graphql/jsutils/Maybe\";\n\nexport const getYTIdFromLink = (link: Maybe<string> | undefined): string => {\n  if (typeof link !== \"string\" || !link.includes(\"/\")) {\n    return \"aVFPzTDCihQ\";\n  }\n  const splitedLink = link.split(\"/\");\n  return splitedLink[splitedLink.length - 1];\n};\n","import React, { IframeHTMLAttributes } from \"react\";\n\ntype YTEmbedProps = IframeHTMLAttributes<HTMLIFrameElement> & {\n  videoId: string;\n};\n\nexport const YTEmbed: React.FC<YTEmbedProps> = ({ videoId, ...props }) => {\n  return (\n    <iframe\n      {...props}\n      src={`https://www.youtube.com/embed/${videoId}`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n    ></iframe>\n  );\n};\n","import React, { IframeHTMLAttributes } from \"react\";\nimport { getYTIdFromLink } from \"../../utils/getYTIdFromLink\";\nimport { YTEmbed } from \"../YTEmbed\";\n\ntype LaunchEmbedFrameProps = IframeHTMLAttributes<HTMLIFrameElement> & {\n  link: string | undefined | null;\n  name: string;\n  nameBreak?: boolean;\n  title: string;\n};\n\nexport const LaunchEmbedFrame: React.FC<LaunchEmbedFrameProps> = ({\n  link,\n  title,\n  name,\n  nameBreak = false,\n  ...props\n}) => {\n  return !link ? null : (\n    <>\n      <br />\n      {name}：{nameBreak ? <br /> : null}\n      <br/>\n      <YTEmbed\n        {...props}\n        className=\"embed__video\"\n        videoId={getYTIdFromLink(link)}\n        title={title || \"\"}\n      />\n      <br />\n    </>\n  );\n};\n","import React, { AnchorHTMLAttributes } from \"react\";\n\ntype LaunchLinkProps = AnchorHTMLAttributes<HTMLAnchorElement> & {\n  className: string;\n  href?: string | undefined | null;\n  name: string;\n  nameBreak?: boolean;\n  description?: string | undefined | null;\n};\n\nexport const LaunchLink: React.FC<LaunchLinkProps> = ({\n  className,\n  href,\n  name,\n  nameBreak = false,\n  description,\n  ...props\n}) => {\n  return !href || !description ? null : (\n    <>\n      <br />\n      {name}：{nameBreak ? <br /> : null}\n      <a {...props} className={className} href={href}>\n        {description}\n      </a>\n      <br />\n    </>\n  );\n};\n","import React from \"react\";\n\ntype LaunchSpanProps = React.HTMLAttributes<HTMLSpanElement> & {\n  className: string;\n  name: string;\n  nameBreak?: boolean;\n  beforeBreak?: boolean;\n  content: string | undefined | null;\n};\n\nexport const LaunchSpan: React.FC<LaunchSpanProps> = ({\n  className,\n  name,\n  nameBreak = false,\n  beforeBreak = false,\n  content,\n  ...props\n}) => {\n  return !content?.length ? null : (\n    <>\n      {beforeBreak ? <br /> : null}\n      {name}：{nameBreak ? <br /> : null}\n      <span style={{ fontSize: \"18px\" }} {...props} className={className}>\n        {content}\n      </span>\n      <br />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Launch } from \"../../generated/graphql\";\nimport { RWDVariant } from \"../../hooks/useRWD\";\nimport \"../../styles/LaunchMission.scss\";\nimport { getArticleNameFromLink } from \"../../utils/getArticleNameFromLink\";\nimport { LaunchEmbedFrame } from \"./LaunchEmbedFrame\";\nimport { LaunchLink } from \"./LaunchLink\";\nimport { LaunchSpan } from \"./LaunchSpan\";\n\ninterface LaunchMissionProps {\n  target: Launch;\n  variant: RWDVariant;\n}\n\nexport const LaunchMission: React.FC<LaunchMissionProps> = ({\n  target,\n  variant,\n}) => {\n  const isMobile = variant === \"mobile\";\n  return (\n    <>\n      <h1 className=\"title\">{target?.mission_name}</h1>\n      <p className=\"text\" style={{ padding: variant !== \"PC\" ? \"0 5vw\" : \"0\" }}>\n        <LaunchSpan\n          className=\"rocket\"\n          name=\"🚀 Rocket\"\n          content={target.rocket?.rocket_name}\n        />\n        <LaunchSpan className=\"id\" name=\"🚩 ID\" content={target.id} />\n        <LaunchSpan\n          className=\"type\"\n          name=\"✨ Types\"\n          content={target.rocket?.rocket_type}\n        />\n        <LaunchSpan\n          className=\"state\"\n          name=\"✔️ State\"\n          content={target.launch_success ? \"Success\" : \"Failure\"}\n        />\n        <LaunchSpan\n          className=\"date\"\n          name=\"📅 Date\"\n          style={{ fontSize: \"16px\" }}\n          content={target.launch_date_local}\n        />\n        <LaunchSpan\n          className=\"site\"\n          name=\"📍 Site\"\n          content={target.launch_site?.site_name_long}\n        />\n        <LaunchLink\n          className=\"article__link\"\n          href={target?.links?.article_link || \"\"}\n          target=\"_blank\"\n          name=\"✨ Article\"\n          nameBreak={true}\n          description={getArticleNameFromLink(target?.links?.article_link)}\n        />\n        <LaunchSpan\n          className=\"detail\"\n          name=\"💡 Details\"\n          nameBreak={true}\n          beforeBreak={true}\n          content={target.details}\n        />\n        <LaunchEmbedFrame\n          link={target.links?.video_link}\n          title={target.rocket?.rocket_name || \"\"}\n          name=\"🔗 Video\"\n          nameBreak={true}\n          style={{\n            width: \"100%\",\n            minHeight: isMobile ? \"350px\" : \"600px\",\n            borderRadius: isMobile ? \"0\" : \"12px\",\n          }}\n        />\n        <br/>\n      </p>\n    </>\n  );\n};\n","export const difference = (a: number, b: number) => Math.abs(a - b);\n","export const sleep = (ms: number) => new Promise((res) => setTimeout(res, ms));\n","import { useEffect, useState } from \"react\";\n\nexport type RWDVariant = \"mobile\" | \"PC\" | \"tablet\";\n\nconst useRWD = (): RWDVariant => {\n  const [device, setDevice] = useState(\"mobile\" as const);\n\n  const handleRWD = () => {\n    if (window.innerWidth >= 1100) {\n      setDevice(\"PC\" as any);\n    } else if (window.innerWidth <= 768 && window.innerWidth > 576) {\n      setDevice(\"tablet\" as any);\n    } else if (window.innerWidth <= 576) {\n      setDevice(\"mobile\" as any);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleRWD);\n    handleRWD();\n    return () => {\n      window.removeEventListener(\"resize\", handleRWD);\n    };\n  }, []);\n\n  return device;\n};\n\nexport default useRWD;\n","import { __launches_past_limit__ } from \"../constants\";\nimport { IAction, IStateValue } from \"../types\";\n\nexport const initialState: IStateValue = {\n  dispatching: false,\n  selected: -1,\n  limit: __launches_past_limit__+1,\n};\n\nexport enum actionType {\n  SET_DISPATCHING = \"SET_DISPATCHING\",\n  SET_SELECTED = \"SET_SELECTED\",\n  SET_LIMIT = \"SET_LIMIT\",\n}\n\nconst reducer = (state: IStateValue, action: IAction): IStateValue => {\n  switch (action.type) {\n    case actionType.SET_DISPATCHING:\n      return {\n        ...state,\n        dispatching: action.dispatching,\n      };\n    case actionType.SET_SELECTED:\n      return {\n        ...state,\n        selected: action.selected,\n      };\n    case actionType.SET_LIMIT:\n      return {\n        ...state,\n        limit: action.limit\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { ApolloError } from \"@apollo/client\";\nimport { __launches_past_limit__ } from \"../constants\";\nimport {\n  Launch,\n  useLaunchesPastQuery,\n  useLaunchNextQuery,\n} from \"../generated/graphql\";\n\ninterface ILaunchQuery {\n  data: (Launch | null | undefined)[];\n  error?: ApolloError;\n}\n\nexport const useLaunchQuery = (): ILaunchQuery => {\n  const { data: nextQuery, error: nextError } = useLaunchNextQuery();\n  const { data: pastQuery, error: pastError } = useLaunchesPastQuery({\n    variables: { limit: __launches_past_limit__ },\n  });\n  if (pastQuery?.launchesPast && Array.isArray(pastQuery.launchesPast)) {\n    const launchesPast: (Launch | null | undefined)[] = [];\n    pastQuery.launchesPast.forEach((l) => launchesPast.push(l));\n    launchesPast.reverse();\n    launchesPast.push(nextQuery?.launchNext);\n    return { data: launchesPast, error: pastError || nextError };\n  }\n  return { data: [null], error: pastError || nextError };\n};\n","export const __launches_past_limit__ = 10;\n","import React from \"react\";\nimport { Header } from \"../components/Header\";\nimport { LaunchMission } from \"../components/Launch/LaunchMission\";\nimport { usePagination } from \"../hooks/usePagination\";\nimport useRWD from \"../hooks/useRWD\";\nimport { useTarget } from \"../hooks/useTarget\";\nimport \"../styles/Home.scss\";\nimport { difference } from \"../utils/difference\";\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = () => {\n  const { handleOnWheel, handleTouchMove } = usePagination();\n  const { target, error } = useTarget();\n  const device = useRWD();\n  var lastClientY = 0;\n\n  return error ? (\n    <div>{error}</div>\n  ) : (\n    <div\n      className=\"home\"\n      onWheel={(e) => handleOnWheel(e)}\n      onTouchStart={(e) => {\n        if (device === \"PC\") return;\n        lastClientY = e.changedTouches[0].clientY;\n      }}\n      onTouchMove={(e) => {\n        if (device === \"PC\") return;\n        const clientY = e.changedTouches[0].clientY;\n        const isScollDownByTouchMove = clientY - lastClientY < 0; // scroll down\n        const diff = difference(clientY, lastClientY);\n        const withEnoughMoves = diff > 30;\n        // console.log({ isScollDownByTouchMove, diff })\n        handleTouchMove(withEnoughMoves ? isScollDownByTouchMove : undefined);\n      }}\n    >\n      <Header />\n      {!target ? null : (\n        <div className=\"item\">\n          <ul className=\"wrapper\">\n            <LaunchMission target={target} variant={device} />\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useStateValue } from \"../providers/StateProvider\";\nimport { difference } from \"../utils/difference\";\nimport { sleep } from \"../utils/sleep\";\n\nexport const usePagination = () => {\n  const [{ dispatching, limit, selected }, dispatch] = useStateValue();\n\n  const isOnBottom = (): boolean => {\n    const wrapper = document.querySelector(\".wrapper\");\n    const wrapperViewHeight =\n      document.body.clientHeight * (document.body.clientWidth <= 576 ? 1 : 0.9);\n    const scrollTop = wrapper?.scrollTop;\n    const scrollHeight = wrapper?.scrollHeight;\n    if (typeof scrollTop !== \"number\" || typeof scrollHeight !== \"number\")\n      return false;\n    return difference(wrapperViewHeight + scrollTop, scrollHeight) < 2;\n  };\n\n  const isOnTop = (): boolean => {\n    return document.querySelector(\".wrapper\")?.scrollTop === 0;\n  };\n\n  const setState = async (newSelected: number) => {\n    dispatch({ type: \"SET_DISPATCHING\", dispatching: true });\n    dispatch({ type: \"SET_SELECTED\", selected: -1 });\n    await sleep(1000);\n    dispatch({ type: \"SET_SELECTED\", selected: newSelected % limit });\n    await sleep(2000);\n    dispatch({ type: \"SET_DISPATCHING\", dispatching: false });\n  };\n\n  const handleOnWheel = (e: React.WheelEvent<HTMLDivElement>) => {\n    // 如果在 dispatching || 滾動差小於 50 -> 不做任何改變\n    if (dispatching || difference(e.deltaY, 0) < 40) return;\n\n    const isScrollDown = e.deltaY > 0;\n\n    // 滾輪往下 && 尚未達到限制數 -> selected++\n    // 滾輪往上 -> 1.不為0 -> --selected 2. 為0 -> 接到尾巴\n    let newSelected = selected;\n    if (isScrollDown && selected < limit) {\n      if (!isOnBottom()) return;\n      newSelected++;\n    } else if (!isScrollDown) {\n      if (!isOnTop()) return;\n      newSelected = selected ? --newSelected : limit - 1;\n    }\n\n    // dispatching new state ...\n    setState(newSelected);\n  };\n\n  const handleTouchMove = (isScollDownByTouchMove: boolean | undefined) => {\n    if (isScollDownByTouchMove === undefined || dispatching) return;\n\n    let newSelected = selected;\n    if (isScollDownByTouchMove && selected < limit) {\n      if (!isOnBottom()) return;\n      newSelected++;\n    } else if (!isScollDownByTouchMove) {\n      if (!isOnTop()) return;\n      newSelected = selected ? --newSelected : limit - 1;\n    }\n\n    // dispatching new state ...\n    setState(newSelected);\n  };\n\n  return { handleOnWheel, handleTouchMove };\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { Launch } from \"../generated/graphql\";\nimport { useStateValue } from \"../providers/StateProvider\";\nimport { useLaunchQuery } from \"./useLaunchQuery\";\n\nexport const useTarget = () => {\n  const renderConunter = useRef(0);\n  const [target, setTarget] = useState<Launch | null | undefined>(null);\n  const [{ selected }] = useStateValue();\n  const { data: launchQuery, error } = useLaunchQuery();\n  useEffect(() => {\n    setTarget(selected === -1 ? null : launchQuery?.[selected]);\n    renderConunter.current++;\n    console.log(\n      `TargetComponent has re-render ${renderConunter.current} times ~`\n    );\n  }, [selected]);\n  return { target, error };\n};\n","import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport \"./styles/App.scss\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      {/* <CustomParticle /> */}\n      <Home />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\n// context provider \nexport const apolloClient = new ApolloClient({\n  uri: \"https://api.spacex.land/graphql\",\n  cache: new InMemoryCache(),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { apolloClient } from \"./providers/apolloClient\";\nimport { StatePorvider } from \"./providers/StateProvider\";\nimport reducer, { initialState } from \"./reducers/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={apolloClient}>\n      <StatePorvider initialState={initialState} reducer={reducer}>\n        <App />\n      </StatePorvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}